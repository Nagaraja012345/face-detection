import numpy as np 
import cv2 
%matplotlib inline 
import matplotlib.pyplot as plt 
import time
# Create the haar cascade 
cascPath = r'C:\Users\LENOVO\Desktop\python\opencv-master\data\haarcascades\haarcascade_frontalface_alt.xml' 
# cascPath = 'detect/haarcascade_frontalface_default.xml' 
faceCascade = cv2.CascadeClassifier(cascPath)
# Read the image 
img = cv2.imread('C:/Users/LENOVO/Downloads/th.jpg') 
plt.imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))
def detect_faces_show(img_path): 
    img = cv2.imread(img_path) 
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
# Detect faces in the image
    #global faceCascade
    faces = faceCascade.detectMultiScale(gray, 1.3,5)
    #faces = faceCascade.detectMultiScale(gray, scaleFactor=1.5, minNeighbors=5, minSize=(15, 15), flags = cv2.CASCADE_SCALE_IMAGE) 
    print("Found %d faces!" % len(faces))
# Draw a rectangle around the faces 
    for (x, y, w, h) in faces: 
        cv2.rectangle(img, (x, y), (x+w, y+h), (0, 255, 0), 3) 
        plt.imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))
        !pip install opencv-python
cap = cv2.VideoCapture(0)
fourcc = cv2.VideoWriter_fourcc(*'XVID')
out = cv2.VideoWriter('output.avi',fourcc, 8.0, (640,480))

while 1:
    ret,img = cap.read()
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
    faces = face.detectMultiScale(gray, 1.3,5)
    for (x, y, w, h) in faces:
        cv2.rectangle(img, (x, y), (x+w, y+h), (255, 255, 0),2)
        roi_gray = gray[y:y+h, x:x+w]
        roi_color = img[y:y+h, x:x+w]
        eyee = eye.detectMultiScale(roi_gray)
        for (ex, ey, ew, eh) in eyee:
            cv2.rectangle(roi_color, (ex, ey), (ex+ew, ey+eh), (0,127,255), 2)
    cv2.imshow('frame',img)
    out.write(img)
    k = cv2.waitKey(30) & 0xff
    if k ==27:
        break
cap.release()
cv2.destroyAllWindows()
